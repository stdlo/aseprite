name: Release Aseprite
on: [push, pull_request]
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install Skia
      shell: bash
      run: |
        choco install wget -y --no-progress
        wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip
        unzip Skia-Windows-Release-x64.zip -d skia
    - uses: aseprite/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Generating Makefiles
      shell: bash
      run: |
        export enable_ccache=off
        export laf_backend=skia
        export enable_scripting=on
        export skia_arch=x64
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DENABLE_TESTS=ON \
          -DENABLE_SCRIPTING=$enable_scripting \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=$laf_backend \
          -DSKIA_DIR=skia \
          -DSKIA_LIBRARY_DIR=skia/out/Release-$skia_arch
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    # - name: Running C++ Tests
    #   shell: bash
    #   run: |
    #     cd build && $XVFB ctest --output-on-failure
    # - name: Running CLI Tests
    #   if: ${{ matrix.scripting == 'lua' }}
    #   shell: bash
    #   run: |
    #     if [[ "${{ runner.os }}" == "Linux" ]] ; then
    #       export XVFB=xvfb-run
    #     fi
    #     export ASEPRITE=$PWD/build/bin/aseprite
    #     cd tests
    #     $XVFB bash run-tests.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: aseprite
        path: build/bin/
